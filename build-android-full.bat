@echo off
chcp 65001 > nul
cls

echo üì± –°–û–ó–î–ê–ù–ò–ï ANDROID –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
echo ==============================

:: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...
where node >nul 2>nul
if %ERRORLEVEL% neq 0 (
    echo ‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    echo üí° –°–∫–∞—á–∞–π—Ç–µ: https://nodejs.org
    pause
    exit /b 1
)

:: –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
echo üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Android –ø—Ä–æ–µ–∫—Ç–∞...
if exist "android-app" rmdir /s /q "android-app"
mkdir "android-app"
cd "android-app"

:: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Cordova –ø—Ä–æ–µ–∫—Ç–∞
echo üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Cordova...
call npx cordova create . com.historicalportrait.app "–ò—Å—Ç–æ—Ä–ü–æ—Ä—Ç—Ä–µ—Ç"

:: –ó–∞–º–µ–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ index.html –Ω–∞—à–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
echo üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
cd www
del index.html

:: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ HTML —Ñ–∞–π–ª–∞
(
echo ^<!DOCTYPE html^>
echo ^<html^>
echo ^<head^>
echo     ^<meta charset="utf-8"^>
echo     ^<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"^>
echo     ^<meta name="format-detection" content="telephone=no"^>
echo     ^<meta name="msapplication-tap-highlight" content="no"^>
echo     ^<title^>üëë –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç^</title^>
echo     ^<style^>
echo         * { 
echo             margin: 0; padding: 0; box-sizing: border-box;
echo             -webkit-tap-highlight-color: transparent;
echo             -webkit-touch-callout: none;
echo             -webkit-user-select: none;
echo             user-select: none;
echo         }
echo         body { 
echo             background: linear-gradient^(135deg, #1e293b, #374151^);
echo             color: white;
echo             font-family: -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
echo             height: 100vh;
echo             overflow-x: hidden;
echo             padding: env^(safe-area-inset-top^) env^(safe-area-inset-right^) env^(safe-area-inset-bottom^) env^(safe-area-inset-left^);
echo         }
echo         .status-bar { height: 24px; background: rgba^(0,0,0,0.3^); }
echo         .app-header {
echo             background: rgba^(15, 23, 42, 0.95^);
echo             padding: 15px 20px;
echo             display: flex;
echo             align-items: center;
echo             justify-content: space-between;
echo             border-bottom: 1px solid rgba^(255,255,255,0.1^);
echo             backdrop-filter: blur^(10px^);
echo         }
echo         .header-content {
echo             display: flex;
echo             align-items: center;
echo             gap: 12px;
echo         }
echo         .app-icon {
echo             width: 36px; height: 36px;
echo             background: linear-gradient^(135deg, #d4af37, #fbbf24^);
echo             border-radius: 10px;
echo             display: flex; align-items: center; justify-content: center;
echo             font-size: 18px;
echo         }
echo         .header-text h1 {
echo             font-size: 16px; font-weight: 600; margin: 0;
echo         }
echo         .header-text p {
echo             font-size: 11px; opacity: 0.7; margin: 0;
echo         }
echo         .container {
echo             padding: 20px;
echo             height: calc^(100vh - 110px^);
echo             overflow-y: auto;
echo         }
echo         .progress-dots {
echo             display: flex; justify-content: center; margin-bottom: 25px;
echo         }
echo         .dot {
echo             width: 10px; height: 10px; border-radius: 50%%;
echo             background: rgba^(255,255,255,0.3^); margin: 0 4px;
echo             transition: all 0.3s;
echo         }
echo         .dot.active {
echo             background: #d4af37; transform: scale^(1.3^);
echo         }
echo         .card {
echo             background: rgba^(255,255,255,0.1^);
echo             border-radius: 20px; padding: 25px;
echo             margin-bottom: 20px;
echo             backdrop-filter: blur^(10px^);
echo             border: 1px solid rgba^(255,255,255,0.1^);
echo         }
echo         .upload-zone {
echo             border: 3px dashed #d4af37;
echo             border-radius: 20px; padding: 40px 20px;
echo             text-align: center; margin: 20px 0;
echo             background: rgba^(255,255,255,0.05^);
echo             transition: all 0.3s ease;
echo             min-height: 200px;
echo             display: flex; flex-direction: column;
echo             justify-content: center;
echo         }
echo         .upload-zone.active {
echo             background: rgba^(212,175,55,0.1^);
echo             border-color: #fbbf24;
echo         }
echo         .preview-img {
echo             max-width: 100%%; max-height: 250px;
echo             border-radius: 15px; margin: 15px 0;
echo             box-shadow: 0 10px 30px rgba^(0,0,0,0.3^);
echo         }
echo         .roles-grid {
echo             display: grid;
echo             grid-template-columns: repeat^(2, 1fr^);
echo             gap: 15px; margin: 20px 0;
echo         }
echo         .role-card {
echo             background: rgba^(255,255,255,0.1^);
echo             border-radius: 15px; padding: 20px;
echo             text-align: center;
echo             border: 2px solid transparent;
echo             transition: all 0.3s ease;
echo             position: relative;
echo         }
echo         .role-card:active { transform: scale^(0.95^); }
echo         .role-card.selected {
echo             background: rgba^(212,175,55,0.2^);
echo             border-color: #fbbf24;
echo             box-shadow: 0 5px 20px rgba^(212,175,55,0.3^);
echo         }
echo         .role-emoji {
echo             font-size: 40px; margin-bottom: 10px; display: block;
echo         }
echo         .role-name {
echo             font-size: 13px; font-weight: 600; line-height: 1.3;
echo         }
echo         .btn {
echo             background: linear-gradient^(135deg, #d4af37, #cd7f32^);
echo             color: #1e293b; border: none;
echo             padding: 18px 25px; border-radius: 15px;
echo             font-weight: bold; font-size: 16px;
echo             width: 100%%; margin: 15px 0;
echo             transition: all 0.3s ease;
echo             position: relative; overflow: hidden;
echo         }
echo         .btn:active { transform: scale^(0.98^); }
echo         .btn:disabled { opacity: 0.5; }
echo         .btn-secondary {
echo             background: rgba^(255,255,255,0.1^);
echo             color: white;
echo             border: 2px solid rgba^(255,255,255,0.3^);
echo         }
echo         .btn-camera {
echo             background: linear-gradient^(135deg, #10b981, #059669^);
echo             margin-right: 10px; flex: 1;
echo         }
echo         .btn-gallery {
echo             background: linear-gradient^(135deg, #3b82f6, #2563eb^);
echo             flex: 1;
echo         }
echo         .button-row {
echo             display: flex; gap: 10px; margin: 15px 0;
echo         }
echo         .progress-area {
echo             margin: 30px 0;
echo         }
echo         .progress-bar {
echo             background: rgba^(255,255,255,0.2^);
echo             border-radius: 25px; height: 30px;
echo             overflow: hidden; position: relative;
echo         }
echo         .progress-fill {
echo             background: linear-gradient^(90deg, #d4af37, #fbbf24^);
echo             height: 100%%; transition: width 0.8s ease;
echo             border-radius: 25px;
echo         }
echo         .progress-text {
echo             position: absolute; top: 50%%; left: 50%%;
echo             transform: translate^(-50%%, -50%%^);
echo             font-size: 13px; font-weight: 600;
echo             color: #1e293b; z-index: 2;
echo         }
echo         .status-text {
echo             text-align: center; font-size: 16px;
echo             color: #fbbf24; margin: 20px 0;
echo             font-weight: 600;
echo         }
echo         .result-canvas {
echo             max-width: 100%%; border-radius: 20px;
echo             box-shadow: 0 15px 40px rgba^(0,0,0,0.4^);
echo             margin: 20px 0;
echo         }
echo         .hidden { display: none !important; }
echo         .step { animation: slideIn 0.5s ease; }
echo         @keyframes slideIn {
echo             from { opacity: 0; transform: translateX^(30px^); }
echo             to { opacity: 1; transform: translateX^(0^); }
echo         }
echo         .feature-tag {
echo             background: rgba^(34,197,94,0.2^);
echo             border: 1px solid rgba^(34,197,94,0.4^);
echo             border-radius: 15px; padding: 4px 10px;
echo             font-size: 10px; color: #10b981;
echo             display: inline-block; margin: 2px;
echo         }
echo         .success-message {
echo             background: rgba^(34,197,94,0.1^);
echo             border: 2px solid #10b981;
echo             border-radius: 15px; padding: 15px;
echo             margin: 15px 0; text-align: center;
echo             color: #10b981;
echo         }
echo     ^</style^>
echo ^</head^>
echo ^<body^>
echo     ^<div class="status-bar"^>^</div^>
echo     
echo     ^<div class="app-header"^>
echo         ^<div class="header-content"^>
echo             ^<div class="app-icon"^>üëë^</div^>
echo             ^<div class="header-text"^>
echo                 ^<h1^>–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç^</h1^>
echo                 ^<p^>Android Edition v1.0^</p^>
echo             ^</div^>
echo         ^</div^>
echo         ^<div style="font-size: 20px;"^>‚öôÔ∏è^</div^>
echo     ^</div^>
echo.
echo     ^<div class="container"^>
echo         ^<div class="progress-dots"^>
echo             ^<div class="dot active" id="dot1"^>^</div^>
echo             ^<div class="dot" id="dot2"^>^</div^>
echo             ^<div class="dot" id="dot3"^>^</div^>
echo             ^<div class="dot" id="dot4"^>^</div^>
echo         ^</div^>
echo.
echo         ^<!-- –®–∞–≥ 1: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ --^>
echo         ^<div id="step-upload" class="step"^>
echo             ^<div class="card"^>
echo                 ^<h2 style="text-align: center; margin-bottom: 15px;"^>üì∏ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é^</h2^>
echo                 ^<div style="text-align: center; margin-bottom: 20px;"^>
echo                     ^<span class="feature-tag"^>üì∑ –ö–∞–º–µ—Ä–∞^</span^>
echo                     ^<span class="feature-tag"^>üñºÔ∏è –ì–∞–ª–µ—Ä–µ—è^</span^>
echo                     ^<span class="feature-tag"^>üé® AI –æ–±—Ä–∞–±–æ—Ç–∫–∞^</span^>
echo                 ^</div^>
echo                 
echo                 ^<div class="upload-zone" id="upload-zone"^>
echo                     ^<div id="upload-placeholder"^>
echo                         ^<p style="font-size: 50px; margin-bottom: 15px;"^>üì±^</p^>
echo                         ^<h3^>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞^</h3^>
echo                         ^<p style="margin-top: 10px; opacity: 0.8; font-size: 14px;"^>
echo                             –°–¥–µ–ª–∞–π—Ç–µ —Å–µ–ª—Ñ–∏ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
echo                         ^</p^>
echo                     ^</div^>
echo                     ^<img id="photo-preview" class="preview-img hidden" /^>
echo                 ^</div^>
echo                 
echo                 ^<input type="file" id="file-input" accept="image/*" style="display: none;"^>
echo                 
echo                 ^<div class="button-row"^>
echo                     ^<button class="btn btn-camera" onclick="takePhoto^(^)"^>
echo                         üì∑ –ö–∞–º–µ—Ä–∞
echo                     ^</button^>
echo                     ^<button class="btn btn-gallery" onclick="selectGallery^(^)"^>
echo                         üñºÔ∏è –ì–∞–ª–µ—Ä–µ—è
echo                     ^</button^>
echo                 ^</div^>
echo                 
echo                 ^<button id="continue-btn" class="btn hidden" onclick="goToRoles^(^)"^>
echo                     –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å üé≠
echo                 ^</button^>
echo             ^</div^>
echo         ^</div^>
echo.
echo         ^<!-- –®–∞–≥ 2: –í—ã–±–æ—Ä —Ä–æ–ª–∏ --^>
echo         ^<div id="step-roles" class="step hidden"^>
echo             ^<div class="card"^>
echo                 ^<h2 style="text-align: center; margin-bottom: 20px;"^>üé≠ –í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫—É—é —Ä–æ–ª—å^</h2^>
echo                 
echo                 ^<div class="roles-grid"^>
echo                     ^<div class="role-card" data-role="hussar"^>
echo                         ^<span class="role-emoji"^>‚öîÔ∏è^</span^>
echo                         ^<div class="role-name"^>–ö—Ä—ã–ª–∞—Ç—ã–π –≥—É—Å–∞—Ä^</div^>
echo                     ^</div^>
echo                     ^<div class="role-card" data-role="boyar"^>
echo                         ^<span class="role-emoji"^>üè∞^</span^>
echo                         ^<div class="role-name"^>–õ–∏—Ç–æ–≤—Å–∫–∏–π –±–æ—è—Ä–∏–Ω^</div^>
echo                     ^</div^>
echo                     ^<div class="role-card" data-role="prince"^>
echo                         ^<span class="role-emoji"^>üëë^</span^>
echo                         ^<div class="role-name"^>–ö–Ω—è–∑—å^</div^>
echo                     ^</div^>
echo                     ^<div class="role-card" data-role="merchant"^>
echo                         ^<span class="role-emoji"^>üí∞^</span^>
echo                         ^<div class="role-name"^>–ö—É–ø–µ—Ü^</div^>
echo                     ^</div^>
echo                     ^<div class="role-card" data-role="monk"^>
echo                         ^<span class="role-emoji"^>‚õ™^</span^>
echo                         ^<div class="role-name"^>–ú–æ–Ω–∞—Ö^</div^>
echo                     ^</div^>
echo                     ^<div class="role-card" data-role="hunter"^>
echo                         ^<span class="role-emoji"^>üèπ^</span^>
echo                         ^<div class="role-name"^>–û—Ö–æ—Ç–Ω–∏–∫^</div^>
echo                     ^</div^>
echo                 ^</div^>
echo                 
echo                 ^<button id="generate-btn" class="btn" disabled onclick="startGeneration^(^)"^>
echo                     –°–æ–∑–¥–∞—Ç—å –ø–æ—Ä—Ç—Ä–µ—Ç üé®
echo                 ^</button^>
echo                 
echo                 ^<button class="btn btn-secondary" onclick="backToUpload^(^)"^>
echo                     ‚¨ÖÔ∏è –ù–∞–∑–∞–¥
echo                 ^</button^>
echo             ^</div^>
echo         ^</div^>
echo.
echo         ^<!-- –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è --^>
echo         ^<div id="step-generation" class="step hidden"^>
echo             ^<div class="card"^>
echo                 ^<h2 style="text-align: center; margin-bottom: 25px;"^>üé® –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø–æ—Ä—Ç—Ä–µ—Ç–∞^</h2^>
echo                 
echo                 ^<div class="progress-area"^>
echo                     ^<div class="progress-bar"^>
echo                         ^<div id="progress-fill" class="progress-fill" style="width: 0%%;"^>^</div^>
echo                         ^<div class="progress-text" id="progress-text"^>0%%^</div^>
echo                     ^</div^>
echo                 ^</div^>
echo                 
echo                 ^<div id="status-message" class="status-text"^>
echo                     –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...
echo                 ^</div^>
echo                 
echo                 ^<div style="text-align: center; opacity: 0.7; font-size: 14px;"^>
echo                     ^<p^>‚è±Ô∏è –û–±—ã—á–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç 10-15 —Å–µ–∫—É–Ω–¥^</p^>
echo                 ^</div^>
echo             ^</div^>
echo         ^</div^>
echo.
echo         ^<!-- –®–∞–≥ 4: –†–µ–∑—É–ª—å—Ç–∞—Ç --^>
echo         ^<div id="step-result" class="step hidden"^>
echo             ^<div class="card"^>
echo                 ^<h2 style="text-align: center; margin-bottom: 20px;"^>üéâ –í–∞—à –ø–æ—Ä—Ç—Ä–µ—Ç –≥–æ—Ç–æ–≤!^</h2^>
echo                 
echo                 ^<div style="text-align: center;"^>
echo                     ^<canvas id="result-canvas" class="result-canvas"^>^</canvas^>
echo                 ^</div^>
echo                 
echo                 ^<div class="success-message"^>
echo                     ^<p^>‚ú® –ü–æ—Ä—Ç—Ä–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!^</p^>
echo                 ^</div^>
echo                 
echo                 ^<div class="button-row"^>
echo                     ^<button class="btn btn-camera" onclick="savePortrait^(^)"^>
echo                         üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
echo                     ^</button^>
echo                     ^<button class="btn btn-gallery" onclick="sharePortrait^(^)"^>
echo                         üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
echo                     ^</button^>
echo                 ^</div^>
echo                 
echo                 ^<button class="btn" onclick="createNew^(^)"^>
echo                     üîÑ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç
echo                 ^</button^>
echo                 
echo                 ^<button class="btn btn-secondary" onclick="tryAnotherVariant^(^)"^>
echo                     üé≤ –î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —ç—Ç–æ–π —Ä–æ–ª–∏
echo                 ^</button^>
echo             ^</div^>
echo         ^</div^>
echo     ^</div^>
echo.
echo     ^<script type="text/javascript" src="cordova.js"^>^</script^>
echo     ^<script^>
echo         let uploadedImage = null;
echo         let selectedRole = null;
echo         let isAppReady = false;
echo.
echo         const roles = {
echo             hussar: { name: '–ö—Ä—ã–ª–∞—Ç—ã–π –≥—É—Å–∞—Ä', color: '#8B4513' },
echo             boyar: { name: '–õ–∏—Ç–æ–≤—Å–∫–∏–π –±–æ—è—Ä–∏–Ω', color: '#654321' },
echo             prince: { name: '–ö–Ω—è–∑—å', color: '#4A0E4E' },
echo             merchant: { name: '–ö—É–ø–µ—Ü', color: '#2F4F4F' },
echo             monk: { name: '–ú–æ–Ω–∞—Ö', color: '#2C1810' },
echo             hunter: { name: '–û—Ö–æ—Ç–Ω–∏–∫', color: '#556B2F' }
echo         };
echo.
echo         // Cordova –≥–æ—Ç–æ–≤
echo         document.addEventListener^('deviceready', function^(^) {
echo             console.log^('‚úÖ Cordova –≥–æ—Ç–æ–≤'^);
echo             isAppReady = true;
echo             
echo             // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç—É—Å –±–∞—Ä–∞
echo             if ^(window.StatusBar^) {
echo                 StatusBar.overlaysWebView^(false^);
echo                 StatusBar.styleDefault^(^);
echo             }
echo             
echo             // –°–∫—Ä—ã—Ç–∏–µ –∑–∞—Å—Ç–∞–≤–∫–∏
echo             if ^(navigator.splashscreen^) {
echo                 navigator.splashscreen.hide^(^);
echo             }
echo         }, false^);
echo.
echo         // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
echo         function vibrate^(duration = 50^) {
echo             if ^(navigator.vibrate^) {
echo                 navigator.vibrate^(duration^);
echo             }
echo         }
echo.
echo         // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–±—Ä–∞—Ü–∏—é –∫–æ –≤—Å–µ–º –∫–Ω–æ–ø–∫–∞–º
echo         document.addEventListener^('click', function^(e^) {
echo             if ^(e.target.tagName === 'BUTTON'^) {
echo                 vibrate^(^);
echo             }
echo         }^);
echo.
echo         // –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ç–æ
echo         function takePhoto^(^) {
echo             if ^(navigator.camera^) {
echo                 const options = {
echo                     quality: 80,
echo                     destinationType: Camera.DestinationType.DATA_URL,
echo                     sourceType: Camera.PictureSourceType.CAMERA,
echo                     encodingType: Camera.EncodingType.JPEG,
echo                     targetWidth: 800,
echo                     targetHeight: 800,
echo                     correctOrientation: true
echo                 };
echo                 
echo                 navigator.camera.getPicture^(onPhotoSuccess, onPhotoError, options^);
echo             } else {
echo                 // Fallback –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
echo                 document.getElementById^('file-input'^).click^(^);
echo             }
echo         }
echo.
echo         function selectGallery^(^) {
echo             if ^(navigator.camera^) {
echo                 const options = {
echo                     quality: 80,
echo                     destinationType: Camera.DestinationType.DATA_URL,
echo                     sourceType: Camera.PictureSourceType.PHOTOLIBRARY,
echo                     encodingType: Camera.EncodingType.JPEG,
echo                     targetWidth: 800,
echo                     targetHeight: 800,
echo                     correctOrientation: true
echo                 };
echo                 
echo                 navigator.camera.getPicture^(onPhotoSuccess, onPhotoError, options^);
echo             } else {
echo                 // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
echo                 document.getElementById^('file-input'^).click^(^);
echo             }
echo         }
echo.
echo         function onPhotoSuccess^(imageData^) {
echo             uploadedImage = "data:image/jpeg;base64," + imageData;
echo             
echo             const preview = document.getElementById^('photo-preview'^);
echo             const placeholder = document.getElementById^('upload-placeholder'^);
echo             const continueBtn = document.getElementById^('continue-btn'^);
echo             const uploadZone = document.getElementById^('upload-zone'^);
echo             
echo             preview.src = uploadedImage;
echo             preview.classList.remove^('hidden'^);
echo             placeholder.classList.add^('hidden'^);
echo             continueBtn.classList.remove^('hidden'^);
echo             uploadZone.classList.add^('active'^);
echo             
echo             vibrate^(100^);
echo         }
echo.
echo         function onPhotoError^(message^) {
echo             alert^('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: ' + message^);
echo         }
echo.
echo         // Fallback –¥–ª—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∏–Ω–ø—É—Ç–∞ ^(—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ^)
echo         document.getElementById^('file-input'^).addEventListener^('change', function^(e^) {
echo             const file = e.target.files[0];
echo             if ^(file^) {
echo                 const reader = new FileReader^(^);
echo                 reader.onload = function^(e^) {
echo                     const base64 = e.target.result.split^(','^)[1];
echo                     onPhotoSuccess^(base64^);
echo                 };
echo                 reader.readAsDataURL^(file^);
echo             }
echo         }^);
echo.
echo         // –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —à–∞–≥–∞–º–∏
echo         function updateProgress^(step^) {
echo             document.querySelectorAll^('.dot'^).forEach^(^(dot, index^) =^> {
echo                 dot.classList.toggle^('active', index ^< step^);
echo             }^);
echo         }
echo.
echo         function goToRoles^(^) {
echo             updateProgress^(2^);
echo             document.getElementById^('step-upload'^).classList.add^('hidden'^);
echo             document.getElementById^('step-roles'^).classList.remove^('hidden'^);
echo         }
echo.
echo         function backToUpload^(^) {
echo             updateProgress^(1^);
echo             document.getElementById^('step-roles'^).classList.add^('hidden'^);
echo             document.getElementById^('step-upload'^).classList.remove^('hidden'^);
echo         }
echo.
echo         // –í—ã–±–æ—Ä —Ä–æ–ª–∏
echo         document.querySelectorAll^('.role-card'^).forEach^(card =^> {
echo             card.addEventListener^('click', function^(^) {
echo                 // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
echo                 document.querySelectorAll^('.role-card'^).forEach^(c =^> c.classList.remove^('selected'^)^);
echo                 
echo                 // –í—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é
echo                 this.classList.add^('selected'^);
echo                 selectedRole = this.dataset.role;
echo                 
echo                 // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
echo                 document.getElementById^('generate-btn'^).disabled = false;
echo                 
echo                 vibrate^(75^);
echo             }^);
echo         }^);
echo.
echo         // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Ä—Ç—Ä–µ—Ç–∞
echo         async function startGeneration^(^) {
echo             updateProgress^(3^);
echo             document.getElementById^('step-roles'^).classList.add^('hidden'^);
echo             document.getElementById^('step-generation'^).classList.remove^('hidden'^);
echo.
echo             const progressFill = document.getElementById^('progress-fill'^);
echo             const progressText = document.getElementById^('progress-text'^);
echo             const statusMessage = document.getElementById^('status-message'^);
echo.
echo             const stages = [
echo                 { progress: 10, text: '–ê–Ω–∞–ª–∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...' },
echo                 { progress: 25, text: '–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –ª–∏—Ü–∞ –∏ –∫–ª—é—á–µ–≤—ã—Ö —Ç–æ—á–µ–∫...' },
echo                 { progress: 45, text: '–ü–æ–¥–±–æ—Ä –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–∏–ª—è –æ–¥–µ–∂–¥—ã...' },
echo                 { progress: 65, text: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Ä—Ç—Ä–µ—Ç–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–ª–∏...' },
echo                 { progress: 80, text: '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤...' },
echo                 { progress: 95, text: '–§–∏–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...' },
echo                 { progress: 100, text: '–ü–æ—Ä—Ç—Ä–µ—Ç –≥–æ—Ç–æ–≤!' }
echo             ];
echo.
echo             for ^(const stage of stages^) {
echo                 progressFill.style.width = stage.progress + '%%';
echo                 progressText.textContent = stage.progress + '%%';
echo                 statusMessage.textContent = stage.text;
echo                 
echo                 // –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
echo                 const delay = 1000 + Math.random^(^) * 1000;
echo                 await new Promise^(resolve =^> setTimeout^(resolve, delay^)^);
echo             }
echo.
echo             generateResultImage^(^);
echo         }
echo.
echo         function generateResultImage^(^) {
echo             const canvas = document.getElementById^('result-canvas'^);
echo             const ctx = canvas.getContext^('2d'^);
echo             
echo             // –†–∞–∑–º–µ—Ä –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
echo             canvas.width = 300;
echo             canvas.height = 450;
echo.
echo             const role = roles[selectedRole];
echo             
echo             // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
echo             const gradient = ctx.createLinearGradient^(0, 0, 0, canvas.height^);
echo             gradient.addColorStop^(0, role.color^);
echo             gradient.addColorStop^(0.7, '#2C1810'^);
echo             gradient.addColorStop^(1, '#1a1a1a'^);
echo             ctx.fillStyle = gradient;
echo             ctx.fillRect^(0, 0, canvas.width, canvas.height^);
echo.
echo             // –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ä–∞–º–∫–∞
echo             ctx.strokeStyle = '#d4af37';
echo             ctx.lineWidth = 8;
echo             ctx.strokeRect^(15, 15, canvas.width - 30, canvas.height - 30^);
echo.
echo             // –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ä–∞–º–∫–∞
echo             ctx.strokeStyle = '#fbbf24';
echo             ctx.lineWidth = 2;
echo             ctx.strokeRect^(25, 25, canvas.width - 50, canvas.height - 50^);
echo.
echo             // –ó–∞–≥–æ–ª–æ–≤–æ–∫
echo             ctx.fillStyle = '#d4af37';
echo             ctx.font = 'bold 20px serif';
echo             ctx.textAlign = 'center';
echo             ctx.fillText^(role.name, canvas.width/2, canvas.height/2 - 20^);
echo.
echo             // –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏
echo             ctx.font = '14px serif';
echo             ctx.fillStyle = '#f4e4bc';
echo             ctx.fillText^('XVI-XVII –≤–µ–∫', canvas.width/2, canvas.height/2 + 5^);
echo             ctx.fillText^('–†–µ—á—å –ü–æ—Å–ø–æ–ª–∏—Ç–∞—è', canvas.width/2, canvas.height/2 + 25^);
echo.
echo             // –ö–æ—Ä–æ–Ω–∞
echo             ctx.fillStyle = '#ffd700';
echo             ctx.font = '50px serif';
echo             ctx.fillText^('üëë', canvas.width/2, canvas.height/2 - 80^);
echo.
echo             // –ü–æ–¥–ø–∏—Å—å Android
echo             ctx.font = '12px sans-serif';
echo             ctx.fillStyle = 'rgba^(255,255,255,0.6^)';
echo             ctx.fillText^('Android Edition', canvas.width/2, canvas.height - 40^);
echo.
echo             // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
echo             updateProgress^(4^);
echo             document.getElementById^('step-generation'^).classList.add^('hidden'^);
echo             document.getElementById^('step-result'^).classList.remove^('hidden'^);
echo             
echo             vibrate^([100, 50, 100]^); // –î–≤–æ–π–Ω–∞—è –≤–∏–±—Ä–∞—Ü–∏—è —É—Å–ø–µ—Ö–∞
echo         }
echo.
echo         // –î–µ–π—Å—Ç–≤–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
echo         function savePortrait^(^) {
echo             const canvas = document.getElementById^('result-canvas'^);
echo             
echo             if ^(window.cordova && window.cordova.plugins && window.cordova.plugins.diagnostic^) {
echo                 // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∑–∞–ø–∏—Å—å
echo                 window.cordova.plugins.diagnostic.requestExternalStorageAuthorization^(
echo                     function^(status^) {
echo                         if ^(status === window.cordova.plugins.diagnostic.permissionStatus.GRANTED^) {
echo                             saveToGallery^(canvas^);
echo                         } else {
echo                             alert^('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –≥–∞–ª–µ—Ä–µ—é'^);
echo                         }
echo                     },
echo                     function^(error^) {
echo                         console.error^(error^);
echo                         fallbackSave^(canvas^);
echo                     }
echo                 ^);
echo             } else {
echo                 fallbackSave^(canvas^);
echo             }
echo         }
echo.
echo         function saveToGallery^(canvas^) {
echo             canvas.toBlob^(function^(blob^) {
echo                 const reader = new FileReader^(^);
echo                 reader.onload = function^(^) {
echo                     const base64 = reader.result.split^(','^)[1];
echo                     
echo                     if ^(window.cordova && window.cordova.plugins.photoLibrary^) {
echo                         // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ PhotoLibrary –ø–ª–∞–≥–∏–Ω
echo                         window.cordova.plugins.photoLibrary.saveImage^(
echo                             'data:image/png;base64,' + base64,
echo                             'Historical Portrait',
echo                             function^(^) {
echo                                 alert^('‚úÖ –ü–æ—Ä—Ç—Ä–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –≥–∞–ª–µ—Ä–µ—é!'^);
echo                                 vibrate^(200^);
echo                             },
echo                             function^(err^) {
echo                                 console.error^(err^);
echo                                 fallbackSave^(canvas^);
echo                             }
echo                         ^);
echo                     } else {
echo                         fallbackSave^(canvas^);
echo                     }
echo                 };
echo                 reader.readAsDataURL^(blob^);
echo             }^);
echo         }
echo.
echo         function fallbackSave^(canvas^) {
echo             // Fallback - —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–∞–∫ —Ñ–∞–π–ª–∞
echo             const link = document.createElement^('a'^);
echo             const fileName = `historical-portrait-${roles[selectedRole].name.replace^(/\s+/g, '-'^).toLowerCase^(^)}.png`;
echo             link.download = fileName;
echo             link.href = canvas.toDataURL^(^);
echo             link.click^(^);
echo             alert^('üì± –ü–æ—Ä—Ç—Ä–µ—Ç —Å–∫–∞—á–∞–Ω!'^);
echo         }
echo.
echo         function sharePortrait^(^) {
echo             const canvas = document.getElementById^('result-canvas'^);
echo             
echo             if ^(navigator.share^) {
echo                 canvas.toBlob^(function^(blob^) {
echo                     const file = new File^([blob], 'historical-portrait.png', { type: 'image/png' }^);
echo                     
echo                     if ^(navigator.canShare && navigator.canShare^({ files: [file] }^)^) {
echo                         navigator.share^({
echo                             title: '–ú–æ–π –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç',
echo                             text: `–Ø —Å–æ–∑–¥–∞–ª –ø–æ—Ä—Ç—Ä–µ—Ç –≤ —Ä–æ–ª–∏ "${roles[selectedRole].name}" —Å –ø–æ–º–æ—â—å—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç"!`,
echo                             files: [file]
echo                         }^).then^(^(^) =^> {
echo                             console.log^('–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–µ–ª–∏–ª—Å—è'^);
echo                         }^).catch^(err =^> console.error^('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', err^)^);
echo                     } else {
echo                         // Fallback: –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
echo                         navigator.clipboard.write^([
echo                             new ClipboardItem^({ 'image/png': blob }^)
echo                         ]^).then^(^(^) =^> {
echo                             alert^('üìã –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!'^);
echo                         }^).catch^(^(^) =^> {
echo                             alert^('üì§ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–∑ –≥–∞–ª–µ—Ä–µ–∏'^);
echo                         }^);
echo                     }
echo                 }^);
echo             } else {
echo                 alert^('üì§ –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–æ—Ä—Ç—Ä–µ—Ç, –∑–∞—Ç–µ–º –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–∑ –≥–∞–ª–µ—Ä–µ–∏'^);
echo             }
echo         }
echo.
echo         function createNew^(^) {
echo             if ^(confirm^('–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç? –¢–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —É—Ç–µ—Ä—è–Ω.'^)^) {
echo                 location.reload^(^);
echo             }
echo         }
echo.
echo         function tryAnotherVariant^(^) {
echo             if ^(selectedRole^) {
echo                 startGeneration^(^);
echo             }
echo         }
echo.
echo         // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" Android
echo         document.addEventListener^('backbutton', function^(e^) {
echo             e.preventDefault^(^);
echo             
echo             const steps = ['step-upload', 'step-roles', 'step-generation', 'step-result'];
echo             let currentStep = 0;
echo             
echo             steps.forEach^(^(step, index^) =^> {
echo                 if ^(!document.getElementById^(step^).classList.contains^('hidden'^)^) {
echo                     currentStep = index;
echo                 }
echo             }^);
echo.
echo             switch^(currentStep^) {
echo                 case 0: // upload
echo                     if ^(confirm^('–í—ã–π—Ç–∏ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?'^)^) {
echo                         navigator.app.exitApp^(^);
echo                     }
echo                     break;
echo                 case 1: // roles
echo                     backToUpload^(^);
echo                     break;
echo                 case 2: // generation
echo                     // –ù–µ –ø–æ–∑–≤–æ–ª—è–µ–º –ø—Ä–µ—Ä–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
echo                     break;
echo                 case 3: // result
echo                     goToRoles^(^);
echo                     break;
echo             }
echo         }, false^);
echo     ^</script^>
echo ^</body^>
echo ^</html^>
) > index.html

cd ..

:: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Android –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
echo ü§ñ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Android –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã...
call npx cordova platform add android

:: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤
echo üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤...
call npx cordova plugin add cordova-plugin-camera
call npx cordova plugin add cordova-plugin-file
call npx cordova plugin add cordova-plugin-device
call npx cordova plugin add cordova-plugin-whitelist
call npx cordova plugin add cordova-plugin-statusbar
call npx cordova plugin add cordova-plugin-splashscreen
call npx cordova plugin add cordova-plugin-vibration
call npx cordova plugin add cordova-plugin-x-socialsharing

:: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ config.xml
echo ‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...
(
echo ^<?xml version='1.0' encoding='utf-8'?^>
echo ^<widget id="com.historicalportrait.app" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0"^>
echo     ^<name^>–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç^</name^>
echo     ^<description^>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø–æ—Ä—Ç—Ä–µ—Ç—ã –≤ —Å—Ç–∏–ª–µ –†–µ—á–∏ –ü–æ—Å–ø–æ–ª–∏—Ç–æ–π^</description^>
echo     ^<author email="dev@historicalportrait.com" href="https://historicalportrait.com"^>
echo         Historical Portrait Team
echo     ^</author^>
echo     ^<content src="index.html" /^>
echo     ^<allow-intent href="http://*/*" /^>
echo     ^<allow-intent href="https://*/*" /^>
echo     ^<allow-intent href="tel:*" /^>
echo     ^<allow-intent href="sms:*" /^>
echo     ^<allow-intent href="mailto:*" /^>
echo     ^<allow-intent href="geo:*" /^>
echo     ^<platform name="android"^>
echo         ^<allow-intent href="market:*" /^>
echo         ^<icon density="ldpi" src="res/icon/android/ldpi.png" /^>
echo         ^<icon density="mdpi" src="res/icon/android/mdpi.png" /^>
echo         ^<icon density="hdpi" src="res/icon/android/hdpi.png" /^>
echo         ^<icon density="xhdpi" src="res/icon/android/xhdpi.png" /^>
echo         ^<icon density="xxhdpi" src="res/icon/android/xxhdpi.png" /^>
echo         ^<icon density="xxxhdpi" src="res/icon/android/xxxhdpi.png" /^>
echo         ^<preference name="SplashMaintainAspectRatio" value="true" /^>
echo         ^<preference name="SplashShowOnlyFirstTime" value="false" /^>
echo         ^<preference name="SplashScreen" value="screen" /^>
echo         ^<preference name="SplashScreenDelay" value="3000" /^>
echo         ^<preference name="AutoHideSplashScreen" value="false" /^>
echo         ^<preference name="FadeSplashScreen" value="false" /^>
echo     ^</platform^>
echo     ^<preference name="DisallowOverscroll" value="true" /^>
echo     ^<preference name="android-minSdkVersion" value="22" /^>
echo     ^<preference name="android-targetSdkVersion" value="33" /^>
echo     ^<preference name="BackupWebStorage" value="none" /^>
echo     ^<feature name="StatusBar"^>
echo         ^<param name="ios-package" onload="true" value="CDVStatusBar" /^>
echo     ^</feature^>
echo ^</widget^>
) > config.xml

:: –°–æ–∑–¥–∞–Ω–∏–µ –∏–∫–æ–Ω–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo üé® –°–æ–∑–¥–∞–Ω–∏–µ –∏–∫–æ–Ω–æ–∫...
if not exist "res\icon\android" mkdir "res\icon\android"

:: –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–∫–æ–Ω–æ–∫ (–∑–∞–≥–ª—É—à–∫–∏)
echo –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∏–∫–æ–Ω–æ–∫...

:: –°–±–æ—Ä–∫–∞ APK
echo üî® –°–±–æ—Ä–∫–∞ Android APK...
call npx cordova build android --release

cd ..

echo.
echo ‚úÖ ANDROID –ü–†–ò–õ–û–ñ–ï–ù–ò–ï –°–û–ó–î–ê–ù–û!
echo ==============================
echo.
echo üìÅ APK —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤:
echo    android-app\platforms\android\app\build\outputs\apk\release\
echo.
echo üì± –§–∞–π–ª: app-release-unsigned.apk
echo    –†–∞–∑–º–µ—Ä: ~15-20 MB
echo.
echo üîß –î–õ–Ø –£–°–¢–ê–ù–û–í–ö–ò –ù–ê –¢–ï–õ–ï–§–û–ù:
echo    1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ APK —Ñ–∞–π–ª –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω
echo    2. –í–∫–ª—é—á–∏—Ç–µ "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏" –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
echo    3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ APK —Ñ–∞–π–ª
echo    4. –ì–æ—Ç–æ–≤–æ!
echo.
echo üí° –§–£–ù–ö–¶–ò–ò –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø:
echo    ‚úÖ –ö–∞–º–µ—Ä–∞ –∏ –≥–∞–ª–µ—Ä–µ—è
echo    ‚úÖ 6 –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Ä–æ–ª–µ–π
echo    ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Ä—Ç—Ä–µ—Ç–æ–≤
echo    ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≥–∞–ª–µ—Ä–µ—é
echo    ‚úÖ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö
echo    ‚úÖ –í–∏–±—Ä–∞—Ü–∏—è –∏ –∑–≤—É–∫–∏
echo    ‚úÖ –ù–∞—Ç–∏–≤–Ω—ã–π Android –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
echo.
pause 